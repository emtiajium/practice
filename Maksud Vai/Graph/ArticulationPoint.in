#include<iostream>
#include<string>
#include<vector>
using namespace std;

#define NV  2005

int nv,ne,low[NV],cnt,dn[NV],par[NV];
bool iar[NV];
vector<int> AP,adj[NV];

void DFS_AP(int u)
{
    int i,chi=0,v;

    low[u] = dn[u] = cnt++;

    for(i=0;i<adj[u].size();i++)
	{
		v = adj[u][i];

        if( dn[v] == -1 )
        {
            chi++;
            par[v] = u ;
            DFS_AP(v);
            low[u]=min(low[u],low[v]);

            if(dn[u]==1 && chi>1)   iar[u] = true;
            else if(low[v]>=dn[u] && dn[u]!=1)  iar[u]=true;
        }
        else if(v != par[u])
            low[u] = min(low[u],dn[v]);
    }

}

int main()
{
    int i,u,v;
    //freopen("ar.in","r",stdin);

    while(scanf("%d%d",&nv,&ne)==2)
    {
        memset(dn,-1,sizeof(int)*(nv+2));
        memset(iar,false,sizeof(bool)*(nv+2));
        for(i=0;i<nv;i++)   adj[i].clear();
        AP.clear();
        cnt=1;

        while(ne--)
        {
            scanf("%d%d",&u,&v);
            adj[u].push_back(v);
            adj[v].push_back(u);
        }

        par[0]=-1;
        DFS_AP(0);
        for(i=0;i<nv;i++)cout<<low[i]<<endl;
        for(cnt=i=0;i<nv;i++)   if(iar[i])  AP.push_back(i);

        if(AP.size())
        {
            printf("Number of Articulation Point: %d\nPoints:\n",AP.size());
            for(i=0;i<AP.size();i++)    printf("%d\n",AP[i]);
            cout<<endl;
        }
        else printf("This is a Biconnected Component.\n\n");

    }
    return 0;
}
