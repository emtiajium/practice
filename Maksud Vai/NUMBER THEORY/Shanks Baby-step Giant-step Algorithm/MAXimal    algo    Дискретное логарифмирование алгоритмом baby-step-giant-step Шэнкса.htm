<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<!-- saved from url=(0034)http://e-maxx.ru/algo/discrete_log -->
<html class="translated-ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1251"><title>MAXimal :: algo :: Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса</title><meta name="author" lang="ru" content="e-maxx"><meta name="description" content="Алгоритмы, олимпиадное программирование, математика"><meta name="keywords" content="алгоритмы программирование"><link rel="stylesheet" type="text/css" href="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/style.css"><script type="text/javascript" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/jquery.js"></script><script type="text/javascript" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/page-contents.js"></script><link rel="stylesheet" type="text/css" href="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/geshi.css"><!--[if IE]><style>.menu a, .menu a:hover { width: 100%; }</style><![endif]--><link type="text/css" rel="stylesheet" charset="UTF-8" href="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/translateelement.css"><script type="text/javascript" charset="UTF-8" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/main.js"></script><script type="text/javascript" charset="UTF-8" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/element_main.js"></script></head><body><table class="main" cellpadding="0" cellspacing="0"><tbody><tr><td class="title" colspan="2"><p><font><font>MAXimal</font></font></p></td></tr><tr><td class="menu"><ul><li><a href="http://e-maxx.ru/index.php"><font><font>home</font></font></a></li><li><a href="http://e-maxx.ru/algo/" class="current"><font><font>algo</font></font></a></li><li><a href="http://e-maxx.ru/bookz/"><font><font>bookz</font></font></a></li><li><a href="http://e-maxx.ru/forum/"><font><font>forum</font></font></a></li><li><a href="http://e-maxx.ru/about.php"><font><font>about</font></font></a></li></ul></td><td class="content"><p class="algoinfo"><font><font>read: 7469 times </font></font><br><font><font>Posted: 10 Jun 2008 18:08 </font></font><br><font><font>Edited: 28 Aug 2011 23:52</font></font></p><div id="contents-table"><p id="contents-table-title"><font><font>Contents </font></font><a href="http://e-maxx.ru/algo/discrete_log#" id="contents-hide"><font><font>[hide]</font></font></a><a href="http://e-maxx.ru/algo/discrete_log#" id="contents-show" style="display:none">[показать]</a></p><div style=""><ul><li><a href="http://e-maxx.ru/algo/discrete_log#0"><font><font>Discrete logarithm</font></font></a></li><ul><li><a href="http://e-maxx.ru/algo/discrete_log#1"><font><font>Algorithm</font></font></a></li><li><a href="http://e-maxx.ru/algo/discrete_log#2"><font><font>Asymptotics</font></font></a></li><li><a href="http://e-maxx.ru/algo/discrete_log#3"><font><font>Implementation</font></font></a></li><ul><li><a href="http://e-maxx.ru/algo/discrete_log#4"><font><font>The simplest implementation</font></font></a></li><li><a href="http://e-maxx.ru/algo/discrete_log#5"><font><font>An improved</font></font></a></li></ul></ul></ul></div></div><a name="0"></a><h1 id="header_0"><font><font>Discrete logarithm</font></font></h1><p><font><font>The discrete logarithm problem is that according to an integer </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/e4c9b6bf3a65f2e487e7cb3e199f2154.png" alt="a"><font><font>, </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/64e10b28938db2ba8a2b9fabb72a2cd9.png" alt="b"><font><font>, </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/4f70748eaed5e0c2c70d7e899166ee1d.png" alt="m"><font><font>solve the equation:</font></font></p><p></p><p class="formula"><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/ec29644c2af45bb21098ab656df32dee.png" alt=" a^x = b \pmod m, "></p><p><font><font>where </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/e4c9b6bf3a65f2e487e7cb3e199f2154.png" alt="a"><font><font>and </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/4f70748eaed5e0c2c70d7e899166ee1d.png" alt="m"><font><font>- </font></font><b><font><font>are relatively prime</font></font></b><font><font> (note: if they are not relatively prime, the algorithm described below is incorrect, although, presumably, it can be modified so that it still worked).</font></font></p><p><font><font class="">Here we describe an algorithm, known as the </font></font><b><font><font class="">"baby-Step-Giant-Step algorithm"</font></font></b><font><font class=""> , proposed by </font></font><b><font><font class="">Shanks (Shanks)</font></font></b><font><font class=""> in 1971, working for a while </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/f5f57882bcd88aff2a7b5a4473ec791f.png" alt="O (\sqrt{m} \log m)"><font><font class="">. </font><font class="">Also, this algorithm is called an algorithm </font></font><b><font><font class="">"Meet-in-the-Middle"</font></font></b><font><font class=""> (because it is actually only one form of this technique applied to a specific problem - the discrete logarithm problem).</font></font></p><p></p><p></p><a name="1"></a><h2 style="padding-top:40px;" id="header_1"><font><font>Algorithm</font></font></h2><p><font><font>So, we have the equation:</font></font></p><p></p><p class="formula"><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/ec29644c2af45bb21098ab656df32dee.png" alt=" a^x = b \pmod m, "></p><p><font><font class="">where </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/e4c9b6bf3a65f2e487e7cb3e199f2154.png" alt="a"><font><font class="">and </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/4f70748eaed5e0c2c70d7e899166ee1d.png" alt="m"><font><font class="">are relatively prime.</font></font></p><p><font><font>We use to solve it by meet-in-the-middle. </font><font class="">To do this, we transform the equation. </font><font>We set</font></font></p><p></p><p class="formula"><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/9b1e0fc7ff0c645fa2fc2c93b8a52520.png" alt=" x = np - q, "></p><p><font><font>where </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/8bc19c5640342f9c5ad0ba16baf59981.png" alt="n"><font><font>- is a pre-selected constant (as it is selected depending on </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/4f70748eaed5e0c2c70d7e899166ee1d.png" alt="m"><font><font>, we will understand later). </font><font class="">Sometimes </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/2f8934466bea85c9661745280df23800.png" alt="p"><font><font class="">referred to as "giant step" (as an increase in its per unit increases </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/4a9252cee23f1a80a4e03256ef62d733.png" alt="x"><font><font class="">at once </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/8bc19c5640342f9c5ad0ba16baf59981.png" alt="n"><font><font class="">), and in contrast to him </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/733a381de525580104aa275afe299ec1.png" alt="q"><font><font class="">- "baby step".</font></font></p><p><font><font class="">Clearly, any </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/4a9252cee23f1a80a4e03256ef62d733.png" alt="x"><font><font class="">(in the interval </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/b9c52bebb9074ce17c4acc08da79e109.png" alt="[0;m)"><font><font class="">- it is clear that this range of values &#8203;&#8203;will do) can be represented in such form, and this will be enough for the values:</font></font></p><p class="formula"><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/59f2eee2550cd21bd170d718b4c635d4.png" alt=" p \in \left[ 1; \left\lceil \frac{m}{n} \right\rc[...]"></p><p><font><font>Then the equation becomes:</font></font></p><p></p><p class="formula"><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/afadfd8887b71b19b3eb107abe2cb243.png" alt=" a^{np-q} = b \pmod m, "></p><p><font><font>whence, using the fact that </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/e4c9b6bf3a65f2e487e7cb3e199f2154.png" alt="a"><font><font>and </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/4f70748eaed5e0c2c70d7e899166ee1d.png" alt="m"><font><font>are coprime, we get:</font></font></p><p></p><p class="formula"><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/367f93119a37224f1147f830235f7aa4.png" alt=" a^{np} = b a^q \pmod m. "></p><p><font><font class="">To solve the original equation, we need to find the appropriate values </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/2f8934466bea85c9661745280df23800.png" alt="p"><font><font class="">&#8203;&#8203;and </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/733a381de525580104aa275afe299ec1.png" alt="q"><font><font class="">to values &#8203;&#8203;of the left and right sides are equal. </font><font class="">In other words, we must solve the equation:</font></font></p><p></p><p class="formula"><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/7333815c4d91ee00e04f8fcf55b23530.png" alt=" f_1(p) = f_2(q). "></p><p><font><font>This problem is solved by the meet-in-the-middle as follows. </font><font>The first phase of the algorithm: calculate the value of the function </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/1f61c75bc3066dabd9982f029dd1da3b.png" alt="f_1"><font><font>for all values &#8203;&#8203;of the argument </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/2f8934466bea85c9661745280df23800.png" alt="p"><font><font>, and sort these values. </font><font class="">The second phase of the algorithm, we iterate over the value of the second variable </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/733a381de525580104aa275afe299ec1.png" alt="q"><font><font class="">, compute the second function </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/703ea045144a19504640b199daf295fe.png" alt="f_2"><font><font class="">, and look for the value of precomputed values &#8203;&#8203;of the first function, the binary search.</font></font></p><p></p><p></p><a name="2"></a><h2 style="padding-top:40px;" id="header_2"><font><font>Asymptotics</font></font></h2><p><font><font>First, we estimate the computation time of each of the functions </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/4fae602430f9c03d000e58a8078d842b.png" alt="f_1(p)"><font><font>and </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/3f9bea716fa5c5fe6e9c3db297517ab1.png" alt="f_2(q)"><font><font>. </font><font>And she and the other contains the exponentiation, which can be performed using </font></font><a href="http://e-maxx.ru/algo/binary_pow"><font><font>the algorithm of binary exponentiation</font></font></a><font><font> . </font><font>Then both of these functions, we can calculate the time </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/af4db54e6b1659adbfeec2c133ae45e2.png" alt="O(\log m)"><font><font>.</font></font></p><p><font><font>The algorithm in the first phase contains a calculation of the function </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/4fae602430f9c03d000e58a8078d842b.png" alt="f_1(p)"><font><font>for each possible value </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/2f8934466bea85c9661745280df23800.png" alt="p"><font><font>and further sorting of values, which gives us the asymptotics</font></font></p><p></p><p class="formula"><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/0f5ea5425deac7b911f45c2d067826d4.png" alt=" O\left( \left\lceil \frac{m}{n} \right\rceil \lef[...]"></p><p><font><font>In the second phase of the algorithm is the computation of the function </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/3f9bea716fa5c5fe6e9c3db297517ab1.png" alt="f_2(q)"><font><font>for each possible value </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/733a381de525580104aa275afe299ec1.png" alt="q"><font><font>and a binary search on an array of values </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/1f61c75bc3066dabd9982f029dd1da3b.png" alt="f_1"><font><font>&#8203;&#8203;, which gives us the asymptotics</font></font></p><p></p><p class="formula"><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/3b5c3083bb1a126316e54f1d00f94787.png" alt=" O\left( n \left( \log m + \log \left\lceil \frac{[...]"></p><p><font><font class="">Now, when we add these two asymptotics, we would get </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/a70b4ea8ab5cf32a31cb2ecac114f464.png" alt="\log m"><font><font class="">multiplied by the amount </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/8bc19c5640342f9c5ad0ba16baf59981.png" alt="n"><font><font class="">and </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/b2e352062c4d7e8b922845d22951d1c3.png" alt="m/n"><font><font class="">, and almost obvious that the minimum is reached, when </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/807027172f9b52a2b51325594fb043e1.png" alt="n \approx m/n"><font><font class="">, that is, </font><font>algorithm for optimal constant </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/8bc19c5640342f9c5ad0ba16baf59981.png" alt="n"><font><font>should be chosen as follows:</font></font></p><p></p><p class="formula"><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/c4ddef8e3c2ebd1e3261a0d6fb805c46.png" alt=" n \approx \sqrt{m}. "></p><p><font><font>Then the asymptotic behavior of the algorithm takes the form:</font></font></p><p></p><p class="formula"><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/0a8e81ea414b4cefe3107a69bf866ecd.png" alt=" O\left( \sqrt{m} ~ \log m \right). "></p><p><font><font>Note. </font><font>We could exchange roles </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/1f61c75bc3066dabd9982f029dd1da3b.png" alt="f_1"><font><font>, and </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/703ea045144a19504640b199daf295fe.png" alt="f_2"><font><font>(ie, in the first phase to compute the values &#8203;&#8203;of the function </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/703ea045144a19504640b199daf295fe.png" alt="f_2"><font><font>, and the second - </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/1f61c75bc3066dabd9982f029dd1da3b.png" alt="f_1"><font><font>), but it is easy to see that the result will not change, and the asymptotic behavior, we can not improve.</font></font></p><p></p><p></p><a name="3"></a><h2 style="padding-top:40px;" id="header_3"><font><font>Implementation</font></font></h2><p></p><p></p><a name="4"></a><h3 style="padding-top:15px;" id="header_4"><font><font>The simplest implementation</font></font></h3><p><font><font class="">The function </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/edb4d5ee4f676cce34b534852d94f9c9.png" alt="\rm powmod"><font><font class="">performs a binary construction of </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/e4c9b6bf3a65f2e487e7cb3e199f2154.png" alt="a"><font><font class="">a power </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/64e10b28938db2ba8a2b9fabb72a2cd9.png" alt="b"><font><font class="">modulo </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/4f70748eaed5e0c2c70d7e899166ee1d.png" alt="m"><font><font class="">, see </font></font><a href="http://e-maxx.ru/algo/binary_pow"><font><font class="">Binary Exponentiation</font></font></a><font><font class=""> .</font></font></p><p><font><font class="">The function </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/501b00642e11bd93d6073e0b23cce761.png" alt="\rm solve"><font><font class="">performs the actual solution of the problem. </font><font>This function returns the response (the number in the interval </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/b9c52bebb9074ce17c4acc08da79e109.png" alt="[0;m)"><font><font>), or more precisely, one of the answers. </font><font>The function returns </font></font><img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/fc5f9135f75a6da19325dc3822484bbd.png" alt="-1"><font><font>if the solution does not exist.</font></font></p><p></p><pre class="cpp"><span class="kw4">int</span> powmod <span class="br0">(</span><span class="kw4">int</span> a, <span class="kw4">int</span> b, <span class="kw4">int</span> m<span class="br0">)</span> <span class="br0">{</span>
	<span class="kw4">int</span> res <span class="sy1">=</span> <span class="nu0">1</span><span class="sy4">;</span>
	<span class="kw1">while</span> <span class="br0">(</span>b <span class="sy1">&gt;</span> <span class="nu0">0</span><span class="br0">)</span>
		<span class="kw1">if</span> <span class="br0">(</span>b <span class="sy3">&amp;</span> <span class="nu0">1</span><span class="br0">)</span> <span class="br0">{</span>
			res <span class="sy1">=</span> <span class="br0">(</span>res <span class="sy2">*</span> a<span class="br0">)</span> <span class="sy2">%</span> m<span class="sy4">;</span>
			<span class="sy2">--</span>b<span class="sy4">;</span>
		<span class="br0">}</span>
		<span class="kw1">else</span> <span class="br0">{</span>
			a <span class="sy1">=</span> <span class="br0">(</span>a <span class="sy2">*</span> a<span class="br0">)</span> <span class="sy2">%</span> m<span class="sy4">;</span>
			b <span class="sy1">&gt;&gt;=</span> <span class="nu0">1</span><span class="sy4">;</span>
		<span class="br0">}</span>
	<span class="kw1">return</span> res <span class="sy2">%</span> m<span class="sy4">;</span>
<span class="br0">}</span><font></font>
&nbsp;<font></font>
<span class="kw4">int</span> solve <span class="br0">(</span><span class="kw4">int</span> a, <span class="kw4">int</span> b, <span class="kw4">int</span> m<span class="br0">)</span> <span class="br0">{</span>
	<span class="kw4">int</span> n <span class="sy1">=</span> <span class="br0">(</span><span class="kw4">int</span><span class="br0">)</span> <span class="kw3">sqrt</span> <span class="br0">(</span>m <span class="sy2">+</span> <span class="nu18">.0</span><span class="br0">)</span> <span class="sy2">+</span> <span class="nu0">1</span><span class="sy4">;</span>
	map<span class="sy1">&lt;</span><span class="kw4">int</span>,<span class="kw4">int</span><span class="sy1">&gt;</span> vals<span class="sy4">;</span>
	<span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> i<span class="sy1">=</span>n<span class="sy4">;</span> i<span class="sy1">&gt;=</span><span class="nu0">1</span><span class="sy4">;</span> <span class="sy2">--</span>i<span class="br0">)</span>
		vals<span class="br0">[</span> powmod <span class="br0">(</span>a, i <span class="sy2">*</span> n, m<span class="br0">)</span> <span class="br0">]</span> <span class="sy1">=</span> i<span class="sy4">;</span>
	<span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> i<span class="sy1">=</span><span class="nu0">0</span><span class="sy4">;</span> i<span class="sy1">&lt;=</span>n<span class="sy4">;</span> <span class="sy2">++</span>i<span class="br0">)</span> <span class="br0">{</span>
		<span class="kw4">int</span> cur <span class="sy1">=</span> <span class="br0">(</span>powmod <span class="br0">(</span>a, i, m<span class="br0">)</span> <span class="sy2">*</span> b<span class="br0">)</span> <span class="sy2">%</span> m<span class="sy4">;</span>
		<span class="kw1">if</span> <span class="br0">(</span>vals.<span class="me1">count</span><span class="br0">(</span>cur<span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
			<span class="kw4">int</span> ans <span class="sy1">=</span> vals<span class="br0">[</span>cur<span class="br0">]</span> <span class="sy2">*</span> n <span class="sy2">-</span> i<span class="sy4">;</span>
			<span class="kw1">if</span> <span class="br0">(</span>ans <span class="sy1">&lt;</span> m<span class="br0">)</span>
				<span class="kw1">return</span> ans<span class="sy4">;</span>
		<span class="br0">}</span>
	<span class="br0">}</span>
	<span class="kw1">return</span> <span class="sy2">-</span><span class="nu0">1</span><span class="sy4">;</span>
<span class="br0">}</span></pre><p>Здесь мы для удобства при реализации первой фазы алгоритма воспользовались структурой данных "map" (красно-чёрным деревом), которая для каждого значения функции <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/f6abb8233dca2e3a0fd8e4b3b7f810a5.png" alt="f_1(i)"> хранит аргумент <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/2d9d1096e116db33bc39a0accf4e9ef7.png" alt="i">, при котором это значение достигалось. При этом если одно и то же значение достигалось несколько раз, записывается наименьший из всех аргументов. Это сделано для того, чтобы впоследствии, на второй фазе алгоритма, нашёлся ответ в промежутке <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/b9c52bebb9074ce17c4acc08da79e109.png" alt="[0;m)">.</p><p>Учитывая, что аргумент функции <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/0ddaab584cf83af67ef84807dcead3ab.png" alt="f_1()"> на первой фазе у нас перебирался от единицы и до <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/8bc19c5640342f9c5ad0ba16baf59981.png" alt="n">, а аргумент функции <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/69d7b2909ce4e42304249f9d2eaa3218.png" alt="f_2()"> на второй фазе перебирается от нуля до <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/8bc19c5640342f9c5ad0ba16baf59981.png" alt="n">, то в итоге мы покрываем всё множество возможных ответов, т.к. отрезок <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/a66b1d6b145ff0b7153fc91ca3538944.png" alt="[0; n^2]"> содержит в себе промежуток <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/b9c52bebb9074ce17c4acc08da79e109.png" alt="[0;m)">. При этом отрицательным ответ получиться не мог, а ответы, большие либо равные <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/4f70748eaed5e0c2c70d7e899166ee1d.png" alt="m"> мы можем игнорировать — всё равно должны находиться соответствующие им ответы из промежутка <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/b9c52bebb9074ce17c4acc08da79e109.png" alt="[0;m)">.</p><p>Эту функцию можно изменить на тот случай, если требуется находить <b>все решения</b> задачи дискретного логарифма. Для этого надо заменить "map" на какую-либо другую структуру данных, позволяющую хранить для одного аргумента сразу несколько значений (например, "multimap"), и соответствующим образом изменить код второй фазы.</p><p></p><p></p><a name="5"></a><h3 style="padding-top:15px;" id="header_5">Улучшенная реализация</h3><p>При <b>оптимизации по скорости</b> можно поступить следующим образом.</p><p>Во-первых, сразу бросается в глаза ненужность бинарного возведения в степень на второй фазе алгоритма. Вместо этого можно просто завести переменную и домножать её каждый раз на <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/e4c9b6bf3a65f2e487e7cb3e199f2154.png" alt="a">.</p><p>Во-вторых, так же можно избавиться от бинарного возведения в степень и на первой фазе: в самом деле, достаточно один раз посчитать величину <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/b666399b7062b6e8fbf046b598a2b9a7.png" alt="a^n">, и потом просто домножать на неё.</p><p>Таким образом, логарифм в асимптотике по-прежнему останется, но это будет только логарифм, связанный со структурой данных "map" (т.е., в терминах алгоритма, с сортировкой и бинарным поиском значений) — т.е. это будет логарифм от <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/e04accd41225fc6a693f8554729890f6.png" alt="\sqrt{m}">, что на практике заметно быстрее первоначального решения.</p><p></p><pre class="cpp"><span class="kw4">int</span> solve <span class="br0">(</span><span class="kw4">int</span> a, <span class="kw4">int</span> b, <span class="kw4">int</span> m<span class="br0">)</span> <span class="br0">{</span>
	<span class="kw4">int</span> n <span class="sy1">=</span> <span class="br0">(</span><span class="kw4">int</span><span class="br0">)</span> <span class="kw3">sqrt</span> <span class="br0">(</span>m <span class="sy2">+</span> <span class="nu18">.0</span><span class="br0">)</span> <span class="sy2">+</span> <span class="nu0">1</span><span class="sy4">;</span><font></font>
&nbsp;<font></font>
	<span class="kw4">int</span> an <span class="sy1">=</span> <span class="nu0">1</span><span class="sy4">;</span>
	<span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> i<span class="sy1">=</span><span class="nu0">0</span><span class="sy4">;</span> i<span class="sy1">&lt;</span>n<span class="sy4">;</span> <span class="sy2">++</span>i<span class="br0">)</span>
		an <span class="sy1">=</span> <span class="br0">(</span>an <span class="sy2">*</span> a<span class="br0">)</span> <span class="sy2">%</span> m<span class="sy4">;</span><font></font>
&nbsp;<font></font>
	map<span class="sy1">&lt;</span><span class="kw4">int</span>,<span class="kw4">int</span><span class="sy1">&gt;</span> vals<span class="sy4">;</span>
	<span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> i<span class="sy1">=</span><span class="nu0">1</span>, cur<span class="sy1">=</span>an<span class="sy4">;</span> i<span class="sy1">&lt;=</span>n<span class="sy4">;</span> <span class="sy2">++</span>i<span class="br0">)</span> <span class="br0">{</span>
		<span class="kw1">if</span> <span class="br0">(</span><span class="sy3">!</span>vals.<span class="me1">count</span><span class="br0">(</span>cur<span class="br0">)</span><span class="br0">)</span>
			vals<span class="br0">[</span>cur<span class="br0">]</span> <span class="sy1">=</span> i<span class="sy4">;</span>
		cur <span class="sy1">=</span> <span class="br0">(</span>cur <span class="sy2">*</span> an<span class="br0">)</span> <span class="sy2">%</span> m<span class="sy4">;</span>
	<span class="br0">}</span><font></font>
&nbsp;<font></font>
	<span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> i<span class="sy1">=</span><span class="nu0">0</span>, cur<span class="sy1">=</span>b<span class="sy4">;</span> i<span class="sy1">&lt;=</span>n<span class="sy4">;</span> <span class="sy2">++</span>i<span class="br0">)</span> <span class="br0">{</span>
		<span class="kw1">if</span> <span class="br0">(</span>vals.<span class="me1">count</span><span class="br0">(</span>cur<span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
			<span class="kw4">int</span> ans <span class="sy1">=</span> vals<span class="br0">[</span>cur<span class="br0">]</span> <span class="sy2">*</span> n <span class="sy2">-</span> i<span class="sy4">;</span>
			<span class="kw1">if</span> <span class="br0">(</span>ans <span class="sy1">&lt;</span> m<span class="br0">)</span>
				<span class="kw1">return</span> ans<span class="sy4">;</span>
		<span class="br0">}</span>
		cur <span class="sy1">=</span> <span class="br0">(</span>cur <span class="sy2">*</span> a<span class="br0">)</span> <span class="sy2">%</span> m<span class="sy4">;</span>
	<span class="br0">}</span>
	<span class="kw1">return</span> <span class="sy2">-</span><span class="nu0">1</span><span class="sy4">;</span>
<span class="br0">}</span></pre><p>Наконец, если модуль <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/4f70748eaed5e0c2c70d7e899166ee1d.png" alt="m"> достаточно мал, то можно и вовсе избавиться от логарифма в асимптотике — просто заведя вместо "map" обычный массив.</p><p>Также можно вспомнить про хеш-таблицы: в среднем они работают также за <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/817532dd84d4eb666e5d80dc58098e94.png" alt="O(1)">, но для них уже не обязательно, чтобы модуль <img class="tex" src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/4f70748eaed5e0c2c70d7e899166ee1d.png" alt="m"> был маленьким.</p></td></tr></tbody></table><div id="goog-gt-tt" class="goog-tooltip skiptranslate" style="visibility: hidden; display: none; left: 427px; top: 2827px; "><div class="top"><div class="title left">Original Text:</div><a class="close-button" href="javascript:void(0)" title="Close"><img src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/cleardot.gif" width="15" height="15" style="background-image:url(http://translate.googleapis.com/translate_static/img/te_ctrl3.gif); background-position:-28px 0px"></a></div><div class="middle"><div class="original-text">Теперь, когда мы сложим эти две асимптотики, у нас получится , умноженный на сумму и , и практически очевидно, что минимум достигается, когда , т.е.</div></div><div class="bottom"><div class="activity-links"><span class="activity-link">Show alternative translations</span></div><div class="started-activity-container"><hr style="color: #CCC; background-color: #CCC; height: 1px; border: none;"><div class="activity-root"></div></div><div class="logo"><img src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/mini_google.png"></div></div><div class="status-message" style="display: none; opacity: 0; "></div></div><table width="100%"><tbody><tr><td><p style="text-align:center;"><img src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/valid-html401-blue" alt="Valid HTML 4.01 Strict" height="31" width="88"><img src="./MAXimal    algo    Дискретное логарифмирование алгоритмом baby-step-giant-step Шэнкса_files/valid-css2-blue" alt="Valid CSS 2.1" height="31" width="88"></p></td></tr></tbody></table><div style="display: none; "><b></b></div></body></html>