
<!-- saved from url=(0050)http://uva.onlinejudge.org/external/117/11710.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Expensive subway</title>
<meta name="description" content="Expensive subway">
<meta name="keywords" content="htmlatex">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">

<meta name="Generator" content="LaTeX2HTML v2008">
<meta http-equiv="Content-Style-Type" content="text/css">

<link rel="STYLESHEET" href="http://uva.onlinejudge.org/external/117/htmlatex.css">

<style id="wrc-middle-css" type="text/css">.wrc_whole_window{	display: none;	position: fixed; 	z-index: 2147483647;	background-color: rgba(40, 40, 40, 0.9);	word-spacing: normal !important;	margin: 0px !important;	padding: 0px !important;	border: 0px !important;	left: 0px;	top: 0px;	width: 100%;	height: 100%;	line-height: normal !important;	letter-spacing: normal !important;	overflow: hidden;}.wrc_bar_window{	display: none;	position: fixed; 	z-index: 2147483647;	background-color: rgba(60, 60, 60, 1.0);	word-spacing: normal !important;	font-family: Segoe UI, Arial Unicode MS, Arial, Sans-Serif;	margin: 0px !important;	padding: 0px !important;	border: 0px !important;	left: 0px;	top: 0px;	width: 100%;	height: 40px;	line-height: normal !important;	letter-spacing: normal !important;	color: white !important;	font-size: 13px !important;}.wrc_middle {	display: table-cell;	vertical-align: middle;	width: 100%;}.wrc_middle_main {	font-family: Segoe UI, Arial Unicode MS, Arial, Sans-Serif;	font-size: 14px;	width: 600px;	height: auto;    background: url(chrome-extension://icmlaeflemplmjndnaapfdbbnpncnbda/skin/images/background-body.jpg) repeat-x left top;	background-color: rgb(39, 53, 62);	position: relative;	margin-left: auto;	margin-right: auto;	text-align: left;}.wrc_middle_tq_main {	font-family: Segoe UI, Arial Unicode MS, Arial, Sans-Serif;	font-size: 16px;	width: 615px;	height: 460px;    background: url(chrome-extension://icmlaeflemplmjndnaapfdbbnpncnbda/skin/images/background-sitecorrect.png) no-repeat;	background-color: white;	color: black !important;	position: relative;	margin-left: auto;	margin-right: auto;	text-align: center;}.wrc_middle_logo {    background: url(chrome-extension://icmlaeflemplmjndnaapfdbbnpncnbda/skin/images/logo.jpg) no-repeat left bottom;    width: 140px;    height: 42px;    color: orange;    display: table-cell;    text-align: right;    vertical-align: middle;}.wrc_icon_warning {	margin: 20px 10px 20px 15px;	float: left;	background-color: transparent;}.wrc_middle_title {    color: #b6bec7;	height: auto;    margin: 0px auto;	font-size: 2.2em;	white-space: nowrap;	text-align: center;}.wrc_middle_hline {    height: 2px;	width: 100%;    display: block;}.wrc_middle_description {	text-align: center;	margin: 15px;	font-size: 1.4em;	padding: 20px;	height: auto;	color: white;	min-height: 3.5em;}.wrc_middle_actions_main_div {	margin-bottom: 15px;	text-align: center;}.wrc_middle_actions_blue_button div {	display: inline-block;	width: auto;	cursor: Pointer;	margin: 3px 10px 3px 10px;	color: white;	font-size: 1.2em;	font-weight: bold;}.wrc_middle_actions_blue_button {	-moz-appearance: none;	border-radius: 7px;	-moz-border-radius: 7px/7px;	border-radius: 7px/7px;	background-color: rgb(0, 173, 223) !important;	display: inline-block;	width: auto;	cursor: Pointer;	border: 2px solid #00dddd;	padding: 0px 20px 0px 20px;}.wrc_middle_actions_blue_button:hover {	background-color: rgb(0, 159, 212) !important;}.wrc_middle_actions_blue_button:active {	background-color: rgb(0, 146, 200) !important;	border: 2px solid #00aaaa;}.wrc_middle_actions_grey_button div {	display: inline-block;	width: auto;	cursor: Pointer;	margin: 3px 10px 3px 10px;	color: white !important;	font-size: 15px;	font-weight: bold;}.wrc_middle_actions_grey_button {	-moz-appearance: none;	border-radius: 7px;	-moz-border-radius: 7px/7px;	border-radius: 7px/7px;	background-color: rgb(100, 100, 100) !important;	display: inline-block;	width: auto;	cursor: Pointer;	border: 2px solid #aaaaaa;	text-decoration: none;	padding: 0px 20px 0px 20px;}.wrc_middle_actions_grey_button:hover {	background-color: rgb(120, 120, 120) !important;}.wrc_middle_actions_grey_button:active {	background-color: rgb(130, 130, 130) !important;	border: 2px solid #00aaaa;}.wrc_middle_action_low {	font-size: 0.9em;	white-space: nowrap;	cursor: Pointer;	color: grey !important;	margin: 10px 10px 0px 10px;	text-decoration: none;}.wrc_middle_action_low:hover {	color: #aa4400 !important;}.wrc_middle_actions_rest_div {	padding-top: 5px;	white-space: nowrap;	text-align: center;}.wrc_middle_action {	white-space: nowrap;	cursor: Pointer;	color: red !important;	font-size: 1.2em;	margin: 10px 10px 0px 10px;	text-decoration: none;}.wrc_middle_action:hover {	color: #aa4400 !important;}</style><script id="wrc-script-middle_window" type="text/javascript" language="JavaScript">var g_inputsCnt = 0;var g_InputThis = new Array(null, null, null, null);var g_alerted = false;/* we test the input if it includes 4 digits   (input is a part of 4 inputs for filling the credit-card number)*/function is4DigitsCardNumber(val){	var regExp = new RegExp('[0-9]{4}');	return (val.length == 4 && val.search(regExp) == 0);}/* testing the whole credit-card number 19 digits devided by three '-' symbols or   exactly 16 digits without any dividers*/function isCreditCardNumber(val){	if(val.length == 19)	{		var regExp = new RegExp('[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{4}');		return (val.search(regExp) == 0);	}	else if(val.length == 16)	{		var regExp = new RegExp('[0-9]{4}[0-9]{4}[0-9]{4}[0-9]{4}');		return (val.search(regExp) == 0);	}	return false;}function CheckInputOnCreditNumber(self){	if(g_alerted)		return false;	var value = self.value;	if(self.type == 'text')	{		if(is4DigitsCardNumber(value))		{			var cont = true;			for(i = 0; i < g_inputsCnt; i++)				if(g_InputThis[i] == self)					cont = false;			if(cont && g_inputsCnt < 4)			{				g_InputThis[g_inputsCnt] = self;				g_inputsCnt++;			}		}		g_alerted = (g_inputsCnt == 4);		if(g_alerted)			g_inputsCnt = 0;		else			g_alerted = isCreditCardNumber(value);	}	return g_alerted;}function CheckInputOnPassword(self){	if(g_alerted)		return false;	var value = self.value;	if(self.type == 'password')	{		g_alerted = (value.length > 0);	}	return g_alerted;}function onInputBlur(self, bRatingOk, bFishingSite){	var bCreditNumber = CheckInputOnCreditNumber(self);	var bPassword = CheckInputOnPassword(self);	if((!bRatingOk || bFishingSite == 1) && (bCreditNumber || bPassword) )	{		var warnDiv = document.getElementById("wrcinputdiv");		if(warnDiv)		{			/* show the warning div in the middle of the screen */			warnDiv.style.left = "0px";			warnDiv.style.top = "0px";			warnDiv.style.width = "100%";			warnDiv.style.height = "100%";			document.getElementById("wrc_warn_fs").style.display = 'none';			document.getElementById("wrc_warn_cn").style.display = 'none';			if(bFishingSite)				document.getElementById("wrc_warn_fs").style.display = 'block';			else				document.getElementById("wrc_warn_cn").style.display = 'block';			warnDiv.style.display = 'table';		}	}}</script></head>

<body lang="EN" bgcolor="#FFFFFF">

<h1><br clear="ALL"><center><table bgcolor="#0000ff"><tbody><tr><td><b><font size="5" color="#FFff00">&nbsp;<a name="SECTION0001000000000000000000">
Expensive subway</a>&nbsp;</font></b></td></tr></tbody></table></center>
</h1>

<p>
Peter lives in <em>Expensive City</em>, one of the most expensive cities in the world. Peter has not got 
enough money to buy a car, and the buses in Expensive City are pretty bad, so he uses the subway to go 
to work. Up to now, the subway was very cheap: you could travel anywhere with just one $2 ticket. 
Last month, the managers decided that it was too cheap so they invented the EFS (Expensive Fare 
System). With this system, users can only buy monthly tickets between adjacent stations, which allows 
them to move between these stations any number of times. The price of the monthly ticket varies 
between stations, so the decision of which tickets to buy must be taken carefully.

</p><p>
</p><div align="CENTER">
<!-- MATH
 $\epsfbox{p11710.eps}$
 -->
<img width="496" height="284" align="BOTTOM" border="0" src="./Expensive subway_files/p11710.png" alt="\epsfbox{p11710.eps}">
</div>

<p>
With the previous subway plan, the cheapest way to travel from Picadilly to Victoria and Queensway was 
to buy the monthly ticket Picadilly-Victoria and Queensway-Victoria, for a total cost of $12. 

</p><p>
Peter is a salesperson, so he needs to be able to travel to any part of the city. He wants to spend as 
little money as possible, and here is where you come into the picture. He has hired you to write a 
program that, given the list of stations, the fares of the monthly tickets between pairs of stations 
and the station nearest Peter's home, returns the minimum amount of money Peter has to spend in order 
to travel to any other station. This program also has to return value if it is not possible to go from 
Peter's home station to all the rest, because in this case Peter will begin to consider using buses...

</p><p>

</p><h2><font size="4" color="#ff0000"><a name="SECTION0001001000000000000000">
Input</a>&nbsp;</font>
</h2>

<p>
The input consists of several test cases. A test case begins with a line containing two integers: <!-- MATH
 $1
\le s \le 400$
 -->
<span class="MATH">1<img width="18" height="31" align="MIDDLE" border="0" src="./Expensive subway_files/11710img2.png" alt="$ \le$"><i>s</i><img width="18" height="31" align="MIDDLE" border="0" src="./Expensive subway_files/11710img2.png" alt="$ \le$">400</span> (the number of stations) and <!-- MATH
 $0 \le c \le 79800$
 -->
<span class="MATH">0<img width="18" height="31" align="MIDDLE" border="0" src="./Expensive subway_files/11710img2.png" alt="$ \le$"><i>c</i><img width="18" height="31" align="MIDDLE" border="0" src="./Expensive subway_files/11710img2.png" alt="$ \le$">79800</span> (the number of connections) separated 
by a single space. This is followed by <span class="MATH"><i>s</i></span> lines, each one containing the name of a subway station. 
These names will be strings of characters (uppercase or lowercase) without punctuation marks or 
whitespace characters, and with a maximum length of 10 characters. After the names of the stations 
there will be <span class="MATH"><i>c</i></span> lines showing the connections between stations. A connection allows people to travel 
from one station to the other in both directions. Each connection is represented as two strings 
indicating the names of the stations and a positive integer indicating the cost of the monthly ticket, 
all of which are separated by single spaces. All names of stations appearing in the connections will 
have previously appeared in the list of <span class="MATH"><i>s</i></span> stations. The connections will all be different, and there 
will not be any connection from a station to itself. The test case will end with a line containing the 
name of the station from which Peter needs to travel to all the other stations. 

</p><p>
The input finishes with the phantom test case `<tt>0 0</tt>', which must not be processed.

</p><p>

</p><h2><font size="4" color="#ff0000"><a name="SECTION0001002000000000000000">
Output</a>&nbsp;</font>
</h2>

<p>
For every test case, the output will be a line containing an integer, the minimum monthly price that 
Peter has pay to travel from the given station to all the others, or Impossible if it is not possible 
to travel to all the stations.

</p><p>

</p><h2><font size="4" color="#ff0000"><a name="SECTION0001003000000000000000">
Sample Input</a>&nbsp;</font>
</h2>

<p>
</p><pre>3 3
Picadilly
Victoria
Queensway
Picadilly Victoria 2
Queensway Victoria 10
Queensway Picadilly 20
Picadilly
4 2
Picadilly
Victoria
Queensway
Temple
Picadilly Victoria 2
Temple Queensway 100
Temple
0 0
</pre>

<p>

</p><h2><font size="4" color="#ff0000"><a name="SECTION0001004000000000000000">
Sample Output</a>&nbsp;</font>
</h2>

<p>
</p><pre>12
Impossible
</pre> 

<p>


</p><p>
<br></p><hr>




</body></html>