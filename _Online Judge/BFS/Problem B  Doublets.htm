
<!-- saved from url=(0070)file:///D:/PROGRAMMING%20TASK/_Online%20Judge/ACM-2009/v101/10150.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>Problem B:  Doublets</title>

</head><body><h2>Problem B:  Doublets</h2>

A <em>Doublet</em> is a pair of words that differ in exactly one letter; 
for example, "booster" and "rooster" or "rooster" and "roaster" or
"roaster" and "roasted".
<p>
You are given a dictionary of up to 25143 lower case words, not exceeding
16 letters each.  You are then given a number of pairs of words.  For
each pair of words, find the shortest sequence of words that begins
with the first word and ends with the second, such that each pair
of adjacent words is a doublet.  For example, if you were
given the input pair "booster" and "roasted", a possible solution would be:
("booster", "rooster", "roaster", "roasted")
provided that these words are all in the dictionary.  
</p><h3>The Input</h3>
Input consists of the dictionary followed by a number of word pairs.  The
dictionary consists of a number of words, one per line, and is terminated by an empty
line.  The pairs of input words follow; the words of each pair occur on
a line separated by a space.
<h3>The Output</h3>
For each input pair, print a set of lines starting with the first word
and ending with the last.  Each pair of adjacent lines must be
a doublet.
If there are several minimal solutions, any one
will do.  
If there is no solution, print a line:  "No solution."
Leave a blank line between cases.
<h3>Sample Input</h3>
<pre>booster
rooster
roaster
coasted
roasted
coastal
postal

booster roasted
coastal postal
</pre>
<h3>Output for Sample Input</h3>
<pre>booster
rooster
roaster
roasted

No solution.
</pre>
</body></html>